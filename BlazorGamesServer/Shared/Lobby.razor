@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@implements IAsyncDisposable

<h3>Lobby</h3>

<ul>
    @if (LobbyList is not null)
    {
        @foreach (var user in LobbyList)
        {
            <li>
                @user.Name (@user.Type)
                @*TODO: Remove user Id details after development but keep for debugging*@
                <details>@user.Id</details>
            </li>
        }
    }
</ul>

@code {
    [CascadingParameter]
    private SessionStateProvider? sessionState { get; set; }

    [Parameter]
    public string? RoomName { get; set; }
    private string? roomName { get; set; }

    [Parameter]
    public List<User>? LobbyList { get; set; }
    private List<User>? lobbyList { get; set; }

    private User? currentUser;

    private HubConnection? lobbyHubConnection;

    protected override async Task OnInitializedAsync()
    {
        if (sessionState is not null)
        {
            currentUser = sessionState.currentUser;
            //Console.WriteLine(currentUser?.Id);
            if (LobbyList is not null && currentUser is not null)
                LobbyList.Add(currentUser);
        }

        lobbyHubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/lobbyhub"))
            .Build();

        lobbyHubConnection.On<List<User>>("LobbyChange", (userList) =>
        {
            lobbyList = userList;
            InvokeAsync(StateHasChanged);
        });

        await lobbyHubConnection.StartAsync();

        roomName = RoomName ?? "default";
        await lobbyHubConnection.SendAsync("UpdateLobby", roomName);

    }

    public async ValueTask DisposeAsync()
    {
        if (lobbyHubConnection is not null)
        {
            await lobbyHubConnection.SendAsync("LeaveRoom", currentUser, roomName);
            await lobbyHubConnection.DisposeAsync();
        }
    }
}
